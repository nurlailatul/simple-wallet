// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	context "context"
	domain "simple-wallet/internal/module/wallet/domain"

	mock "github.com/stretchr/testify/mock"
)

// WalletServiceInterface is an autogenerated mock type for the WalletServiceInterface type
type WalletServiceInterface struct {
	mock.Mock
}

// GetByUserID provides a mock function with given fields: ctx, userID
func (_m *WalletServiceInterface) GetByUserID(ctx context.Context, userID int64) *domain.WalletEntity {
	ret := _m.Called(ctx, userID)

	if len(ret) == 0 {
		panic("no return value specified for GetByUserID")
	}

	var r0 *domain.WalletEntity
	if rf, ok := ret.Get(0).(func(context.Context, int64) *domain.WalletEntity); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.WalletEntity)
		}
	}

	return r0
}

// NewWalletServiceInterface creates a new instance of WalletServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWalletServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *WalletServiceInterface {
	mock := &WalletServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
